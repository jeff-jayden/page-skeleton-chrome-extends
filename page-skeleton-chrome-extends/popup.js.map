{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/popup.js","webpack:///./src/util/chromeKit.js","webpack:///./src/util/chromeMsg.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AACwC;AACA;AACxC;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAS;AACX;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY,qDAAqD;AACjE,aAAa,iCAAiC;AAC9C,UAAU,uDAAuD;AACjE,aAAa,uDAAuD;AACpE,IAAI;AACJ,GAAG;AACH;AACA,GAAG,uDAAS;AACZ,SAAS,KAAK;AACd;AACA,IAAI,uDAAS;AACb,IAAI;AACJ,GAAG;AACH;AACA,GAAG,uDAAS;AACZ;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,uDAAuD;AAC9E,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF,CAAC;;;;;;;;;;;;;AC7FD;AAAA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA;AACA,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA,kCAAkC,GAAG,GAAG,SAAS;AACjD;AACA,EAAE;AACF,CAAC;;;;;;;;;;;;;AC9DD;AAAA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,UAAU;AACzC;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4CAA4C,iBAAiB;AAC7D,SAAS;AACT;AACA,wCAAwC,iBAAiB;AACzD;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC","file":"popup.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/popup.js\");\n","/** @format */\r\nimport chromeMsg from './util/chromeMsg'\r\nimport chromeKit from './util/chromeKit'\r\nlet vm = new Vue({\r\n\tel: '#app',\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tvisible: false,\r\n\t\t\tcurrentSkeletonScreen: {},\r\n\t\t\tconfig: '',\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tconfig() {\r\n\t\t\tlocalStorage.setItem('config', this.config)\r\n\t\t},\r\n\t},\r\n\tcreated() {\r\n\t\tif (localStorage.getItem('currentSkeletonScreen')) {\r\n\t\t\tthis.visible = true\r\n\t\t}\r\n\t\tthis.initConfig()\r\n\t\tthis.getSkeletonInfo()\r\n\t\tchromeMsg.on('createSkeletonOk', () => {\r\n\t\t\tthis.visible = true\r\n\t\t})\r\n\t},\r\n\tmethods: {\r\n\t\tinitConfig() {\r\n\t\t\tconst config = localStorage.getItem('config')\r\n\t\t\tif (config) {\r\n\t\t\t\tthis.config = config\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.config = JSON.stringify({\r\n\t\t\t\tloading: 'chiaroscuro',\r\n\t\t\t\ttext: { color: '#EEEEEE' },\r\n\t\t\t\timage: { shape: 'rect', color: '#EFEFEF', shapeOpposite: [] },\r\n\t\t\t\tbutton: { color: '#EFEFEF', excludes: [] },\r\n\t\t\t\tsvg: { color: '#EFEFEF', shape: 'circle', shapeOpposite: [] },\r\n\t\t\t\tpseudo: { color: '#EFEFEF', shape: 'circle', shapeOpposite: [] },\r\n\t\t\t})\r\n\t\t},\r\n\t\tcreateSkeleton() {\r\n\t\t\tchromeKit.getCurrentTab().then((tab) => {\r\n\t\t\t\tlet { id } = tab\r\n\t\t\t\tconsole.log('this.config', this.config)\r\n\t\t\t\tchromeMsg.emit('createSkeleton', this.config, id)\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetSkeletonInfo() {\r\n\t\t\tchromeMsg.on('createSkeletonInfo', (currentSkeletonScreen) => {\r\n\t\t\t\tconsole.log('currentSkeletonScreen', currentSkeletonScreen)\r\n\t\t\t\tthis.currentSkeletonScreen = currentSkeletonScreen\r\n\t\t\t\tlocalStorage.setItem('currentSkeletonScreen', JSON.stringify(this.currentSkeletonScreen))\r\n\t\t\t})\r\n\t\t},\r\n\t\thandleEdit() {\r\n\t\t\tif (!Object.keys(this.currentSkeletonScreen).length) {\r\n\t\t\t\tthis.$message({\r\n\t\t\t\t\tshowClose: true,\r\n\t\t\t\t\tmessage: '请先生成骨架屏',\r\n\t\t\t\t\ttype: 'warning',\r\n\t\t\t\t})\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tchrome.tabs.create({ url: chrome.extension.getURL('./preview/index.html') })\r\n\t\t},\r\n\t\thandleCopy() {\r\n\t\t\tvar input = document.createElement('input')\r\n\t\t\tinput.setAttribute('value', this.currentSkeletonScreen.html)\r\n\t\t\tdocument.body.appendChild(input)\r\n\t\t\tinput.select()\r\n\t\t\tvar a = document.execCommand('copy')\r\n\t\t\tdocument.body.removeChild(input)\r\n\t\t\tif (a) {\r\n\t\t\t\tthis.$message({\r\n\t\t\t\t\tshowClose: true,\r\n\t\t\t\t\tmessage: '拷贝骨架屏代码片段成功！',\r\n\t\t\t\t\ttype: 'success',\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.$message({\r\n\t\t\t\t\tshowClose: true,\r\n\t\t\t\t\tmessage: '拷贝骨架屏代码片段成功！',\r\n\t\t\t\t\ttype: 'error',\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tconcact() {\r\n\t\t\twindow.open('https://www.yuque.com/wanggangfeng/bsp75t/inu4gw')\r\n\t\t},\r\n\t},\r\n})\r\n","/** @format */\r\n\r\nexport default {\r\n\t// chrome原生通知\r\n\tshowTip(str, opt) {\r\n\t\tlet options = Object.assign(\r\n\t\t\t{\r\n\t\t\t\ttype: 'basic',\r\n\t\t\t\ticonUrl: 'images/icon38.png',\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tmessage: '',\r\n\t\t\t},\r\n\t\t\topt,\r\n\t\t)\r\n\r\n\t\tstr = str.replace('\\n', ' ')\r\n\r\n\t\tif (str.length > 35) {\r\n\t\t\toptions.message = str.substr(0, 35) + '...'\r\n\t\t} else {\r\n\t\t\toptions.message = str\r\n\t\t}\r\n\r\n\t\tconst NOTIFY_ID = '@@notify'\r\n\t\tchrome.notifications.create(NOTIFY_ID, options)\r\n\t\tsetTimeout(() => {\r\n\t\t\tchrome.notifications.clear(NOTIFY_ID)\r\n\t\t}, 5000)\r\n\t},\r\n\t// 向当前的标签页发送消息，从而获取页面内容的信息\r\n\tsendMessageToCurrentTab(data) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tchrome.tabs.query({ active: true, currentWindow: true }, function(tabs) {\r\n\t\t\t\tchrome.tabs.sendMessage(tabs[0].id, data, function(response) {\r\n\t\t\t\t\tconsole.log('response', response)\r\n\t\t\t\t\tresolve(response)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\t// 获取当前便签页\r\n\tgetCurrentTab() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tchrome.tabs.query({ active: true, currentWindow: true }, function(tabs) {\r\n\t\t\t\tconsole.log('getCurrentTab===>tabs', tabs)\r\n\t\t\t\tresolve(tabs[0])\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\t// 重新加载插件并刷新当前页面\r\n\treloadAndRefreshCurrentTab() {\r\n\t\tthis.getCurrentTab().then((tab) => {\r\n\t\t\tchrome.tabs.reload(tab.id)\r\n\t\t\tchrome.runtime.reload()\r\n\t\t})\r\n\t},\r\n\t// 返回插件页面地址\r\n\topenExtensionPage(pageName) {\r\n\t\tlet id = chrome.runtime.id\r\n\t\tlet url = `chrome-extension://${id}/${pageName}.html`\r\n\t\treturn url\r\n\t},\r\n}\r\n","let eventList = []\r\nif (chrome.runtime) {\r\n    chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n        let {command, content} = message\r\n        if (Array.isArray(eventList[command])) {\r\n            eventList[command].forEach(handler => {\r\n                handler(content, sender, sendResponse)\r\n            })\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport default {\r\n    on(eventName, cb, mult = false) {\r\n        if (!eventList[eventName]) {\r\n            eventList[eventName] = []\r\n        }\r\n\r\n        // 默认只监听同一个事件名只监听一次\r\n        if (typeof cb === 'function') {\r\n            if (eventList[eventName].length) {\r\n                console.log(`${eventName} 事件在其他地方已经监听，默认会覆盖其他地方的事件处理函数，如需要请传入第三个参数mult为true`)\r\n            }\r\n\r\n            if (mult) {\r\n                eventList[eventName].push(cb)\r\n            } else {\r\n                eventList[eventName] = [cb]\r\n            }\r\n        }\r\n    },\r\n    emit(command, content, tabId) {\r\n        if (tabId) {\r\n            // 向指定标签页发送消息\r\n            chrome.tabs.sendMessage(tabId, {command, content});\r\n        } else {\r\n            // 向background发送消息\r\n            chrome.runtime.sendMessage({command, content});\r\n        }\r\n    },\r\n    showAllListener() {\r\n        console.log(eventList)\r\n    }\r\n}\r\n"],"sourceRoot":""}